buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
        mavenLocal()
        maven { url='https://repo.spongepowered.org/maven' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'org.spongepowered.mixin'

group = 'com.lovetropics.extras'
archivesBaseName = 'LTExtras'

ext.buildnumber = 0
project.buildnumber = System.getenv('BUILD_NUMBER') ?: 'custom'
version = "${mod_version}-${release_type}+${buildnumber}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'official', version: minecraft_version
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            taskName 'ltextras_client'
            
            workingDirectory project.file('run')
            arg "-mixin.config=ltextras.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                ltextras {
                    source sourceSets.main
                }
            }
        }

        server {
            taskName 'ltextras_server'
        
            workingDirectory project.file('run')
            arg "-mixin.config=ltextras.mixins.json"

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                ltextras {
                    source sourceSets.main
                }
            }
        }
        
        data {
            taskName 'ltextras_data'
        
            workingDirectory project.file('run')
            args "-mixin.config=ltextras.mixins.json", "--existing-mod", "create"

            environment 'target', 'fmluserdevdata'

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                ltextras {
                    source sourceSets.main
                }
            }
            
            args '--mod', 'ltextras', '--all', '--output', '"' + rootProject.file('src/generated/resources/') + '"',
                 '--existing', '"' + sourceSets.main.resources.srcDirs[0] + '"' 
            
        }
    }
}

sourceSets.main.resources {
    srcDir 'src/generated/resources'
}

repositories {
    mavenLocal()
}

configurations {
    shade
}

repositories {
    maven { // Registrate
        url "http://maven.tterrag.com/"
    }
    mavenLocal()
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    
    def registrate = "com.tterrag.registrate:Registrate:MC1.16.2-${registrate_version}"
    implementation fg.deobf(registrate)
    shade registrate
    
    def ltlib = "com.lovetropics.lib:LTLib:${ltlib_version}"
    implementation fg.deobf(ltlib)
    shade ltlib

    // Annotation Processors
    annotationProcessor 'org.spongepowered:mixin:0.8:processor'

    runtimeOnly fg.deobf('com.jozufozu.flywheel:Flywheel:1.16-0.2.4.50')
	runtimeOnly fg.deobf('com.simibubi.create:Create:mc1.16.5_v0.3.2f+464')
}

mixin {
    add sourceSets.main, "ltextras.refmap.json"
}

shadowJar {
    configurations = [project.configurations.shade]
    relocate 'com.tterrag.registrate', 'com.lovetropics.extras.repack.registrate'
    relocate 'com.lovetropics.lib', 'com.lovetropics.extras.repack.ltlib'
    classifier = ''
}

reobf {
    shadowJar {}
}

build.dependsOn shadowJar
build.dependsOn reobfShadowJar

jar {
    classifier = 'slim'

    manifest {
        attributes([
            "Specification-Title": "ltextras",
            "Specification-Vendor": "lovetropics",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"lovetropics",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "ltextras.mixins.json"
        ])
    }
}

if (System.getProperty("idea.sync.active") == "true") {
    afterEvaluate {
        tasks.withType(JavaCompile).all {
            it.options.annotationProcessorPath = files()
        }
    }
}
